!function(t,e){"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?module.exports=e():t.typed=e()}(this,function(){"use strict";function compareTypes(t,e){return"*"===t?1:"*"===e?-1:"Object"===t?1:"Object"===e?-1:0}function getTypeTest(t){var e=typed.types[t];if(!e){var n=Object.keys(typed.types).filter(function(e){return e.toLowerCase()==t.toLowerCase()}).map(function(t){return'"'+t+'"'});throw new Error('Unknown type "'+t+'"'+(n.length?". Did you mean "+n.join(", or ")+"?":""))}return e}function compareNumbers(t,e){return t>e}function Defs(){}function Param(t){if("string"==typeof t)this.types=t.split("|").map(function(t){return t.trim()});else if(Array.isArray(t))this.types=t;else{if(!(t instanceof Param))throw new Error("string or Array expected");this.types=t.types}}function Signature(t,e){if("string"==typeof t)this.params=""!==t?t.split(",").map(function(t){return new Param(t)}):[];else{if(!Array.isArray(t))throw new Error("string or Array expected");this.params=t.map(function(t){return new Param(t)})}this.fn=e}function splitSignatures(t){return Object.keys(t).reduce(function(e,n){var r=t[n],o=new Signature(n,r);return e.concat(o.split())},[])}function normalizeSignatures(t){var e={};return t.map(function(t){var n=t.params.join(",");if(n in e)throw new Error('Error: signature "'+n+'" defined twice');e[n]=t.fn}),e}function splitTypes(t){var e=[];return t.forEach(function(t){t.params.forEach(function(t,n){t.types.forEach(function(t){e[n]||(e[n]=[]),-1==e[n].indexOf(t)&&e[n].push(t)})})}),e}function createParamsTree(t){var e={};return t.forEach(function(t){var n=t.params.concat([]),r=e[n.length];for(r||(r=e[n.length]={signature:[],fn:null,types:{}});n.length>0;){var o=n.shift();if(1!=o.types.length)throw new Error("Parameters should have one type. Split the signatures first.");var s=o.types[0];r.types[s]||(r.types[s]={signature:r.signature.concat(s),fn:null,types:{}}),r=r.types[s]}r.fn=t.fn}),e}function _typed(name,signatures){function switchTypes(t,e,n){var r=[];if(null!==t.fn){var o=defs.add(t.fn,"signature");r.push(n+"return "+o+"("+e.join(", ")+"); // signature: "+t.signature)}else{Object.keys(t.types).sort(compareTypes).forEach(function(o,s){var i,a,u="arg"+e.length,c=n+"  ";if("*"==o)i=s>0?"else {":"",a=s>0?"}":"",0==s&&(c=n);else{var f=defs.add(getTypeTest(o),"test")+"("+u+")";i="if ("+f+") { // type: "+o,a="}"}i&&r.push(n+i),r=r.concat(switchTypes(t.types[o],e.concat(u),c)),a&&r.push(n+a)});var s={};typed.conversions.filter(function(e){return t.types[e.to]&&!t.types[e.from]}).forEach(function(o){if(!s[o.from]){s[o.from]=!0;var i="arg"+e.length,a=defs.add(getTypeTest(o.from),"test")+"("+i+")",u=defs.add(o.convert,"convert")+"("+i+")";r.push(n+"if ("+a+") { // type: "+o.from+", convert to "+o.to),r=r.concat(switchTypes(t.types[o.to],e.concat(u),n+"  ")),r.push(n+"}")}})}return r}for(var defs=new Defs,structure=splitSignatures(signatures),types=splitTypes(structure),params=[],i=0;i<types.length;i++)params.push("arg"+i);var code=[],tree=createParamsTree(structure),paramCounts=Object.keys(tree);code.push("return function "+(name||"")+"("+params.join(", ")+") {"),paramCounts.sort(compareNumbers).forEach(function(t,e){var n=tree[t],r=[],o=0==e?"if":"else if";code.push("  "+o+" (arguments.length == "+t+") {"),code=code.concat(switchTypes(n,r,"    ")),code.push("  }"),e==paramCounts.length-1&&(code.push("  else {"),code.push("    throw new TypeError('Wrong number of arguments');"),code.push("  }"))}),code.push("  throw new TypeError('Wrong function signature');"),code.push("}");var factory=[];factory.push("(function (defs) {"),factory=factory.concat(defs.code("defs")),factory=factory.concat(code),factory.push("})");var fn=eval(factory.join("\n"))(defs);return fn.signatures=normalizeSignatures(structure),fn}Defs.prototype.add=function(t,e){e=e||"fn",this[e]||(this[e]=[]);var n=this[e].indexOf(t);return-1==n&&(n=this[e].length,this[e].push(t)),e+n},Defs.prototype.code=function(t){var e=this,n=[];return t=t||"defs",Object.keys(this).forEach(function(r){var o=e[r];o.forEach(function(e,o){n.push("var "+r+o+" = "+t+"['"+r+"']["+o+"];")})}),n},Param.prototype.toString=function(){return this.types.join("|")},Signature.prototype.split=function(){function t(n,r,o){if(o<n.params.length){var s=n.params[o];s.types.forEach(function(e){t(n,r.concat(e),o+1)})}else e.push(new Signature(r,n.fn))}var e=[];return t(this,[],0),e};var types={"null":function(t){return null===t},"boolean":function(t){return"boolean"==typeof t},number:function(t){return"number"==typeof t},string:function(t){return"string"==typeof t},"function":function(t){return"function"==typeof t},Array:function(t){return Array.isArray(t)},Date:function(t){return t instanceof Date},RegExp:function(t){return t instanceof RegExp},Object:function(t){return"object"==typeof t}},conversions=[],typed={types:types,conversions:conversions};return typed=_typed("typed",{Object:function(t){return _typed(null,t)},"string, Object":_typed,"string, function":function(t,e){var n={};return n[t]=e,_typed(null,n)},"string, string, function":function(t,e,n){var r={};return r[e]=n,_typed(t,r)}}),typed.types=types,typed.conversions=conversions,typed});